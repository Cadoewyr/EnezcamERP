<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vsRDg+NyVNP///wH///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPzw0QD///8B8rsqhu+vA//vsQvu8sE9dfG7Ko3wsxLZ768D/O+u
        AP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A//CyEuX314RAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9tJyAPfZhxfxtx3D764A//G2HLf54qYR////A/XM
        YSnyvjR08bUWx++xCPXvrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/8LIS6vfU
        eUoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADxuSAA9MRFLvCzEOXvrwL/8r81kvbW
        gRH///8B++7KAP7//wH414QY88E8WvG5Iq7vsQrr768C/u+uAP/vrgD/764A/++uAP/vrgD/764A/++u
        AP/wshHv9c1kVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAO2mAADzxENC77AF9O+u
        AP/vsAfx8Lcdu/K+NGn20nIj++vAA/nckQD///8A99iHDfPHUELxuiWW8LQS3u+uAf7vrgD/764A/++u
        AP/vrgD/764A//CxC/XyvjhgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA7KIAAPPD
        REbvrwT2764A/++uAP/vrgD/8LAG+PC0EtTyvS6K9MZNO/rntgr425AA9tR3AP///wT0xUpj77AG9e+u
        AP/vrgD/764A/++uAP/vrgD/77AH+fG6LG4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADwsAkA88JDNvCxDOzvrgD/764A/++uAP/vrgD/764A/++uAf/wsg7o8bgeq/PDQlj2z2sZ////B/K6
        JpLvrwL/764A/++uAP/vrgD/764A/++uAP/vrwT88bosfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPXLWwD2z2gc8bcbze+uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrwH/77AH9vC2
        GcXxvS6N8LQS3++uAP/vrgD/764A/++uAP/vrgD/764A/++uAv/yuiqK/fXfBP756gP88tMAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+ue0AP///wTxuSWT768C/++uAP/vrgD/764A/++uAP/vrgD/764A/++u
        AP/vrgD/764A/++vA/3vrgH+764A/++uAP/vrgD/764A/++uAP/vrgD/760A//G4K5f65a0j+eSqLf/q
        zgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8r81APTIUz3wsw7k764A/++uAP/vrgD/764A/++u
        AP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrQD/8rs0pfjb
        ji70xUp2+eCdB/3y1QAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD20nEA++zABfK8L4DvrwT6764A/++u
        AP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++t
        AP/yvjuy99V8JPG3H7n0x0838LgfAP314gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD31oAA99eDFfG5
        IqTvrwL9764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++u
        AP/vrgD/760A//K+PL/32YgZ8LIO0fG6JJ777MAK+eSpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP3z
        3ADxuSEA99N2HPG5I6PvrwX6764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++u
        AP/vrgD/764A/++uAP/vrQD/8rstzffZihTwsxDJ77EJ8vPCP1v///8B+N2VAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAADyuysA99iEFPK/NXDwtRfI8LEL8u+uAf/vrgH/764B/++uAf/vrgD/764A/++u
        AP/vrgD/764A/++uAP/vrgD/764A/++uAP/xuCPZ+NqIEPC1FcHvrgD/8LMR1/THUTrkewAA////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD88NAA////AffZhxrywTxH8sA5cvPAOovzwDmP88E+gfC1
        F8vvrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A//G3HeT214AM8LYauu+uAP/vrgH/8bUXxPTI
        VS3wthoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///wD///8A////Av//
        /wL///8G8LUYrO+uAf/vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/8LQU7vbRcgnxtx20764B/++u
        AP/vrwL/8bYZwPXKVjHjcgAA+d6XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/fTcAP735wrwtRa2764A/++uAP/vrgD/764A/++uAP/vrgD/764A/++uAP/vrwj499R2BvG5
        I6zvrgL/764B/++uAf/vrwL/8LUU0PTFR1H646kI99R5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD8780A/PDQD++0E77vrgD/764A/++uAP/vrgD/764A/++uAP/vrgD/764A/+6r
        Av365a8C9MdPP/K/NWfzwDht88E8d/PBPILywDiO9MZNhvjXgzP///8A/vrxAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAPvrwQD768IT8LYcvvCwB/vvsAb7768E/O+vAv7vrgH/764A/++u
        AP/vrgD/7qsA/wAAAAAAAAAAAAAAAP///wD///8A////Af///wL414EF+NiDBf///wD+/PYAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/O3GAPztxwjzw0NP8r4zbPK9MnnxvjOI8r40lfG+
        M6PxvS+x8rwrwPG6Js/wtSDYAA//AQAf/4EAf//hAP//+AP///8H///4B///+A//AHAf/AAwH/gAAD/w
        AAA/4AAAP+AAAH/AAAD/wAAA/8CAAP/AMAD/wAwA/8AAAP/AAAA/wAAAP+AAAB/gAAAf8AAAD/gAAAf8
        AAAH/gAAA//gAAH/+AAAf/gAAH/4APh/+AA=
</value>
  </data>
</root>